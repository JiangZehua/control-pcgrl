{
  "problems": [
    # "minecraft_3D_maze_ctrl",
#   "minecraft_3D_zelda_ctrl",
    # "binary_ctrl",
    "binary_ctrl_holey",
#   "zelda_ctrl",
#   "sokoban_ctrl",
#   'simcity',
#   'smb_ctrl',
  ],

  # Pairs of [representation, model] hyperparameters. If model is None, then revert to a default model class.
  "representations_models": [
        # ["narrow3D", null],
#       ["turtle3D", null],
#       ["wide3D", "WideModel3D"],
#       ["wide3D", "WideModel3DSkip"],
#       ["cellular3D", null],
    #   ["narrow", null],
        ["narrowholey", null],
    #   ["wide", null],
    #   ["wideholey", null],
        # ["wide", NCA],
#       ["cellular", null],
        # ["cellular", NCA],
    #   ['turtle', null],
  ],

  "model_configs":
  [
      {},
    #   {'conv_filters': 128, 'fc_size': 128,},
    #   {'conv_filters': 256, 'fc_size': 256,},
  ],

  # TODO: incorporate formal (rather than only functional) metrics as controls
  "global_controls": [
        ["NONE", "NONE"],
      # ['emptiness', 'symmetry'],
  ],

  "local_controls": {
      "binary_ctrl": [
        # ["regions"],
        # ["path-length"],
        # ["regions", "path-length"],
          # ['emptiness', 'path-length'],
          # ["symmetry", "path-length"]
      ],
      "binary_ctrl_holey": [
            # ["regions"],
            # ["path-length"],
            # ["regions", "path-length"],
            # ['emptiness', 'path-length'],
            # ["symmetry", "path-length"]
      ],
      "zelda_ctrl": [
          ["nearest-enemy"],
          ["path-length"],
          ["nearest-enemy", "path-length"],
          # ["emptiness", "path-length"],
          # ["symmetry", "path-length"],
      ],
      "sokoban_ctrl": [
          # ["crate"],
          ["sol-length"],
          ["crate", "sol-length"],
          # ["emptiness", "sol-length"],
          # ["symmetry", "sol-length"],
      ],
      "smb_ctrl": [
          # ['enemies', 'jumps'],
          # ["emptiness", "jumps"],
          # ["symmetry", "jumps"],
      ],
      "RCT": [
          # ['income'],
      ],
      "minecraft_3D_zelda_ctrl": [
  #       ["emptiness", "path-length"],
      ],
      "minecraft_3D_maze_ctrl": [
  #       ["emptiness", "path-length"],
      ],
  },

  # Whether to use a funky curriculum (Absolute Learning Progress w/ Gaussian Mixture Models: 
  # https://arxiv.org/abs/1910.07224) for sampling controllable metric targets. (i.e., sample lower path-length targets 
  # at first, then higher ones as agent becomes more skilled.)
  "alp_gmms": [
      False,
  #   True,
  ],

  # How much of the original level the generator-agent is allowed to change before episode termination.
  "change_percentages": [
    # 0.2,
  #   0.6,
    0.8
    #   1.0,
    # None,
  ],

  "learning_rates": [
    #   0.001,
    #   0.0001,
    #   0.00001,
      0.000005,
    #   0.000001,
  ]

}